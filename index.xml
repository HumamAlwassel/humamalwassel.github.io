<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Humam Alwassel on Humam Alwassel</title>
    <link>https://humamalwassel.github.io/</link>
    <description>Recent content in Humam Alwassel on Humam Alwassel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Humam Alwassel</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0300</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Action Search: Spotting Targets in Untrimmed Videos and Its Application to Temporal Action Localization</title>
      <link>https://humamalwassel.github.io/publication/action-search/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://humamalwassel.github.io/publication/action-search/</guid>
      <description>

&lt;h4 id=&#34;the-code-and-human-searches-dataset-are-coming-soon&#34;&gt;The code and &lt;em&gt;Human Searches&lt;/em&gt; dataset are coming soon!&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Diagnosing Error in Temporal Action Detectors</title>
      <link>https://humamalwassel.github.io/publication/detad/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://humamalwassel.github.io/publication/detad/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Action Search: Targets in Untrimmed Videos and Its Application to Temporal Action Localization [2017]</title>
      <link>https://humamalwassel.github.io/project/action_search/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://humamalwassel.github.io/project/action_search/</guid>
      <description>&lt;p&gt;State-of-the-art approaches for video-based tasks inefficiently search the entire video for specific targets. Despite the encouraging progress these methods achieve, it is crucial to design automated approaches that only explore parts of the video which are the most relevant to the given task. To address such needs, we propose the new problem of &lt;em&gt;target spotting&lt;/em&gt; in video, which we define as finding a specific target in a video sequence while observing a small portion of that video. Inspired by the observation that humans are extremely efficient and accurate in finding individual targets in video, we propose &lt;em&gt;Action Search&lt;/em&gt;, a novel Recurrent Neural Network approach that mimics the way humans spot targets in untrimmed video sequences. Moreover, to address the absence of data recording the behavior of human annotators, we put forward the &lt;em&gt;Human Searches&lt;/em&gt; dataset, a new dataset composed of the search sequences of human annotators for the AVA and THUMOS14 datasets. We consider temporal action localization as an application of the target spotting problem. Experiments on the THUMOS14 dataset reveal that our model is not only able to explore the video efficiently (observing on average &lt;strong&gt;17.3%&lt;/strong&gt; of the video) but also accurately find human activities with &lt;strong&gt;30.8%&lt;/strong&gt; mAP, outperforming state-of-the-art methods.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FPEAnalysis: Automating Floating Point Error Analysis [2016]</title>
      <link>https://humamalwassel.github.io/project/fpeanalysis/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://humamalwassel.github.io/project/fpeanalysis/</guid>
      <description>&lt;p&gt;Manual floating-point error analysis of scientific computing code is tedious and error-prone. Under the supervision of &lt;a href=&#34;http://www.cs.cornell.edu/~bindel/&#34; target=&#34;_blank&#34;&gt;Professor David Bindel&lt;/a&gt; of computer science at Cornell University, I conducted my research to automated these analyses using the “1+ δ” error model and developed the &lt;em&gt;FPEAnalysis&lt;/em&gt; software system. &lt;em&gt;FPEAnalysis&lt;/em&gt; analyzes a piece of code, automatically reports any numerically unstable subexpressions, and gives insights for resolving these instabilities. The system can detect numerical instabilities in many textbook examples, leading Professor Bindel to use the system as an educational tool for his introductory scientific computing course.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/HumamAlwassel/FPEAnalysis&#34; target=&#34;_blank&#34;&gt;Code&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gates App: A Central SDN Controller for Gates Hall Network [2015]</title>
      <link>https://humamalwassel.github.io/project/gates_app/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://humamalwassel.github.io/project/gates_app/</guid>
      <description>&lt;p&gt;Software-defined networking (SDN) is a relatively new paradigm for network management that allows a software-based controller to communicate with the individual network components to create optimal end-to-end routing policies. Following his recent development of the new NetKAT network language, &lt;a href=&#34;http://www.cs.cornell.edu/~jnfoster/&#34; target=&#34;_blank&#34;&gt;Professor Nate Foster&lt;/a&gt; of computer science at Cornell University supervised my independent study project to learn about this emerging new research field. This independent study concluded in the development of &lt;em&gt;Gates App&lt;/em&gt;, an SDN controller for the 28-switch network of Gates Hall, home of Cornell’s computer science department. &lt;em&gt;Gates App&lt;/em&gt; employs the &lt;a href=&#34;http://www.frenetic-lang.org/&#34; target=&#34;_blank&#34;&gt;Frenetic Project&lt;/a&gt; libraries to perform Ethernet routing and host discovery for a dynamically changing network.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/frenetic-lang/tutorials/tree/gates_app&#34; target=&#34;_blank&#34;&gt;Code&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ParEx: A Parallel Extrapolation Solver for Initial-Value ODEs [2015]</title>
      <link>https://humamalwassel.github.io/project/parex/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://humamalwassel.github.io/project/parex/</guid>
      <description>&lt;p&gt;State-of-the-art extrapolation-based solvers for ordinary differential equations (ODEs) are implemented sequentially. In my undergraduate research internship with &lt;a href=&#34;https://www.kaust.edu.sa/en/study/faculty/david-ketcheson&#34; target=&#34;_blank&#34;&gt;Professor David Ketcheson&lt;/a&gt; of applied mathematics at King Abdullah University of Science and Technology, I exploited the fact that under certain conditions, high-order extrapolation methods naturally admit an efficient multi-processor implementation. Thus, I developed &lt;em&gt;ParEx&lt;/em&gt;, an efficient shared-memory parallel implementation of explicit extrapolation methods for solving initial-value ODEs. Using a novel optimal load-balancing algorithm with adaptive step size and order control, &lt;em&gt;ParEx&lt;/em&gt; outperforms state-of-the-art solvers on a range of test problems where the derivative evaluation is moderately expensive.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/numerical-mathematics/extrapolation&#34; target=&#34;_blank&#34;&gt;Code&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://humamalwassel.github.io/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0300</pubDate>
      
      <guid>https://humamalwassel.github.io/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
